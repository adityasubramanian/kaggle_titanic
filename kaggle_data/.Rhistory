install.packages("neuralnet")
install.packages("neuralnet")
library(neuralnet)
library(neuralnet)
install.packages("neuralnet")
getwd()
ls
neuralnet
install.packages("neuralnet")
install.packages("MASS")
library(MASS)
??MASS
install.packages("neuralnet")
library(neuralnet)
neuralnet
#install.packages("Amelia")
#install.packageS("corrorgram")
#install.packages("plyr")
library(Amelia)
library(corrgram)
require(Amelia)
require(corrgram)
readData <- function(path.name, file.name, column.types, missing.types) {
read.csv( url( paste(path.name, file.name, sep="") ),
colClasses=column.types,
na.strings=missing.types )
}
Titanic.path <- "https://github.com/adityasubramanian/kaggle_titanic/tree/master/kaggle_data"
train <- "train.csv"
test  <- "test.csv"
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
test.column.types <- train.column.types[-2]
train.raw <- readData(Titanic.path, train.data.file,
train.column.types, missing.types)
df.train <- train.raw
test.raw <- readData(Titanic.path, test.data.file,
test.column.types, missing.types)
df.infer <- test.raw
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
barplot(table(df.train$Survived),
names.arg = c("Perished", "Survived"),
main="Survived (passenger fate)", col="black")
barplot(table(df.train$Pclass),
names.arg = c("first", "second", "third"),
main="Pclass (passenger traveling class)", col="firebrick")
barplot(table(df.train$Sex), main="Sex (gender)", col="darkviolet")
hist(df.train$Age, main="Age", xlab = NULL, col="brown")
barplot(table(df.train$SibSp), main="SibSp (siblings + spouse aboard)",
col="darkblue")
barplot(table(df.train$Parch), main="Parch (parents + kids aboard)",
col="gray50")
hist(df.train$Fare, main="Fare (fee paid for ticket[s])", xlab = NULL,
col="darkgreen")
barplot(table(df.train$Embarked),
names.arg = c("Cherbourg", "Queenstown", "Southampton"),
main="Embarked (port of embarkation)", col="sienna")
mosaicplot(df.train$Pclass ~ df.train$Survived,
main="Passenger Fate by Traveling Class", shade=FALSE,
color=TRUE, xlab="Pclass", ylab="Survived")
mosaicplot(df.train$Sex ~ df.train$Survived,
main="Passenger Fate by Gender", shade=FALSE, color=TRUE,
xlab="Sex", ylab="Survived")
boxplot(df.train$Age ~ df.train$Survived,
main="Passenger Fate by Age",
xlab="Survived", ylab="Age")
mosaicplot(df.train$Embarked ~ df.train$Survived,
main="Passenger Fate by Port of Embarkation",
shade=FALSE, color=TRUE, xlab="Embarked", ylab="Survived")
corrgram.data <- df.train
## change features of factor type to numeric type for inclusion on correlogram
corrgram.data$Survived <- as.numeric(corrgram.data$Survived)
corrgram.data$Pclass <- as.numeric(corrgram.data$Pclass)
#corrgram.data$Embarked <- revalue(corrgram.data$Embarked,c("C" = 1, "Q" = 2, "S" = 3))
## generate correlogram
corrgram.vars <- c("Survived", "Pclass", "Sex", "Age",
"SibSp", "Parch", "Fare", "Embarked")
corrgram(corrgram.data[,corrgram.vars], order=FALSE,
lower.panel=panel.ellipse, upper.panel=panel.pie,
text.panel=panel.txt, main="Titanic Training Data")
library(Amelia)
library(corrgram)
require(Amelia)
require(corrgram)
readData <- function(path.name, file.name, column.types, missing.types) {
read.csv( url( paste(path.name, file.name, sep="") ),
colClasses=column.types,
na.strings=missing.types )
}
Titanic.path <- "https://github.com/adityasubramanian/kaggle_titanic/tree/master/kaggle_data"
train <- "train.csv"
test  <- "test.csv"
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
test.column.types <- train.column.types[-2]
test.column.types <- train.column.types[-2]
train.raw <- readData(Titanic.path, train.data.file,
train.column.types, missing.types)
df.train <- train.raw
getwd()
setwd("/home/aditya/Documents")
list.files()
setwd("/home/aditya/Documents/kaggle_titanic")
list.files()
setwd("/home/aditya/Documents/kaggle_titanic/kaggle_data")
list.files()
df.train <- train.csv
df.train <- read.csv(train.csv)
df.train <- read.csv("train.csv")
df.infer <- read.csv("test.csv")
test.raw <- readData(Titanic.path, test.data.file,
test.column.types, missing.types)
df.infer <- read.csv("test.csv")
missmap(df.train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
barplot(table(df.train$Survived),
names.arg = c("Perished", "Survived"),
main="Survived (passenger fate)", col="black")
barplot(table(df.train$Pclass),
names.arg = c("first", "second", "third"),
main="Pclass (passenger traveling class)", col="firebrick")
barplot(table(df.train$Sex), main="Sex (gender)", col="darkviolet")
hist(df.train$Age, main="Age", xlab = NULL, col="brown")
barplot(table(df.train$SibSp), main="SibSp (siblings + spouse aboard)",
col="darkblue")
barplot(table(df.train$Parch), main="Parch (parents + kids aboard)",
col="gray50")
hist(df.train$Fare, main="Fare (fee paid for ticket[s])", xlab = NULL,
col="darkgreen")
barplot(table(df.train$Embarked),
names.arg = c("Cherbourg", "Queenstown", "Southampton"),
main="Embarked (port of embarkation)", col="sienna")
mosaicplot(df.train$Pclass ~ df.train$Survived,
main="Passenger Fate by Traveling Class", shade=FALSE,
color=TRUE, xlab="Pclass", ylab="Survived")
mosaicplot(df.train$Sex ~ df.train$Survived,
main="Passenger Fate by Gender", shade=FALSE, color=TRUE,
xlab="Sex", ylab="Survived")
boxplot(df.train$Age ~ df.train$Survived,
main="Passenger Fate by Age",
xlab="Survived", ylab="Age")
mosaicplot(df.train$Embarked ~ df.train$Survived,
main="Passenger Fate by Port of Embarkation",
shade=FALSE, color=TRUE, xlab="Embarked", ylab="Survived")
corrgram.data <- df.train
corrgram.data$Survived <- as.numeric(corrgram.data$Survived)
corrgram.data$Pclass <- as.numeric(corrgram.data$Pclass)
corrgram.data$Embarked <- revalue(corrgram.data$Embarked,c("C" = 1, "Q" = 2, "S" = 3))
corrgram.vars <- c("Survived", "Pclass", "Sex", "Age",
"SibSp", "Parch", "Fare", "Embarked")
corrgram(corrgram.data[,corrgram.vars], order=FALSE,
lower.panel=panel.ellipse, upper.panel=panel.pie,
text.panel=panel.txt, main="Titanic Training Data")
summary(df.train$Age)
names(df.train)
head(df.train$Name, n = 10L)
getTitle <- function(data) {
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", data$Name, TRUE)
title.comma.end <- title.dot.start
+ attr(title.dot.start, "match.length")-1
data$Title <- substr(data$Name, title.dot.start+2, title.comma.end-1)
return (data$Title)
}
df.train$Title <- getTitle(df.train)
df.train$Title
df.train <- read.csv("train.csv", header = TRUE)
df.train$Title <- getTitle(df.train)
df.train$Title
df.train <- read.csv("train.csv", header = FALSE)
df.train$Title <- getTitle(df.train)
df.train$Title
df.train <- read.csv("train.csv", header = TRUE)
df.train$Title <- getTitle(df.train)
df.train$Title
options(digits=2)
require(Hmisc)
#install.packages("Hmisc")
install.packages("Hmisc")
require(Hmisc)
bystats(df.train$Age, df.train$Title,
fun=function(x)c(Mean=mean(x),Median=median(x)))
library(Hmisc)
install.packages
install.packages("Hmisc")
library(Hmisc)
require(Hmisc)
Titanic.path <- "https://raw.github.com/wehrley/Kaggle_Titanic/master/"
Titanic.path
train <- "train.csv"
test  <- "test.csv"
train <- "train.csv"
test  <- "test.csv"
missing.types <- c("NA", "")
train.column.types <- c('integer',   # PassengerId
'factor',    # Survived
'factor',    # Pclass
'character', # Name
'factor',    # Sex
'numeric',   # Age
'integer',   # SibSp
'integer',   # Parch
'character', # Ticket
'numeric',   # Fare
'character', # Cabin
'factor'     # Embarked
)
test.column.types <- train.column.types[-2]
train.raw <- readData(Titanic.path, train.data.file,
train.raw <- readData(Titanic.path, train.data.file,
train.column.types, missing.types)
train.raw <- readData(Titanic.path, train.data.file,
train.column.types, missing.types)
View(train)
View(df.train)
getTitle <- function(data) {
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", data$Name, TRUE)
title.comma.end <- title.dot.start
+ attr(title.dot.start, "match.length")-1
data$Title <- substr(data$Name, title.dot.start+2, title.comma.end-1)
return (data$Title)
}
df.train$Title <- getTitle(df.train)
df.train$Title
df.train$Title <- df.train$Name
df.train$Title
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", data$Name, TRUE)
data
df.train
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", df.train$Name, TRUE)
title.dot.start
title.comma.end <- title.dot.start + attr(title.dot.start, "match.length")-1
title.comma.end
data$Title <- substr(data$Name, title.dot.start+2, title.comma.end-1)
data$Title <- substr(df.train$Name, title.dot.start+2, title.comma.end-1)
df.train$Name
title.dot.start+2
df.train$Name
title.dot.start+2
301-276
df.train$Name
df.train$Name
title.comma.end-1
substr(df.train$Name,title.dot.start+2,title.comma.end-1)
substr(df.train$Name,title.dot.start+2,title.comma.end-1)
title <- substr(df.train$Name,title.dot.start+2,title.comma.end-1)
title
getTitle <- function(data) {
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", data$Name, TRUE)
title.comma.end <- title.dot.start + attr(title.dot.start, "match.length")-1
data$Title <- substr(data$Name, title.dot.start+2, title.comma.end-1)
return (data$Title)
}
df.train$Title <- getTitle(df.train)
df.train$Title
options(digits=2)
bystats(df.train$Age, df.train$Title,
fun=function(x)c(Mean=mean(x),Median=median(x)))
unique(df.train$Title)
options(digits=2)
require(Hmisc)
install.packages("Hmisc")
library(Hmisc)
??bystats
?bystats
bystats()
options(digits=2)
install.packages("plyr")
library(plyr)
install.packages("plyr")
install.packages("ggplot2")
install.packages("scales")
install.packages("Hmisc")
version
install.packages("plyr", repos=NULL)
install.packages("foregin")
options(repos="http://streaming.stat.iastate.edu/CRAN")
install.packages("plyr")
install.packages("plyr")
repos
Scene::Scene(const Scene &source) {
maxImages = source.maxImages;
images = new Images* [maxImages];
xCoord   = new int [maxImages];
yCoord   = new int [maxImagse];
for (int i = 0; i < maxImages; i++){
xCoord[i] = source.xCoord[i];
yCoord[i] = source.yCoord[i];
}
if (source.images[i] != NULL) {
images[i] = new Images(*source.images[i]);
}
images[i] = NULL;
}
#                N Missing Mean Median
# Capt           1       0 70.0   70.0
# Col            2       0 58.0   58.0
# Don            1       0 40.0   40.0
# Dr             6       1 42.0   46.5
# Jonkheer       1       0 38.0   38.0
# Lady           1       0 48.0   48.0
# Major          2       0 48.5   48.5
# Master        36       4  4.6    3.5
# Miss         146      36 21.8   21.0
# Mlle           2       0 24.0   24.0
# Mme            1       0 24.0   24.0
# Mr           398     119 32.4   30.0
# Mrs          108      17 35.9   35.0
# Ms             1       0 28.0   28.0
# Rev            6       0 43.2   46.5
# Sir            1       0 49.0   49.0
# the Countess   1       0 33.0   33.0
# ALL          714     177 29.7   28.0
data_plyr <- read.table("~/Documents/kaggle_titanic/data_plyr.txt", quote="\"")
View(data_plyr)
data_plyr <- read.table("~/Documents/kaggle_titanic/data_plyr.txt", quote="\"", comment.char="")
View(data_plyr)
View(data_plyr)
data_plyr <- read.csv("~/Documents/kaggle_titanic/data_plyr.txt", header=FALSE)
View(data_plyr)
train.raw <- readData(Titanic.path, train.data.file,
train.column.types, missing.types)
train.raw <- readData(Titanic.path, train,
train.column.types, missing.types)
train.raw
df.train
